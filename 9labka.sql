SHOW CON_NAME;

CREATE USER SKS IDENTIFIED BY 123123;

GRANT CREATE SESSION TO SKS;
GRANT CREATE SYNONYM TO SKS;

SELECT * FROM USER_OBJECTS
WHERE CREATED = TO_DATE('24-06-2025','dd-mm-yyyy');



GRANT CREATE SESSION TO SKS;
GRANT CREATE ANY TABLE TO SKS;
GRANT INSERT ANY TABLE TO SKS;
GRANT CREATE SEQUENCE TO SKS;
GRANT CREATE CLUSTER TO SKS;
GRANT CREATE VIEW TO SKS;
GRANT CREATE MATERIALIZED VIEW TO SKS;
ALTER USER SKS QUOTA UNLIMITED ON SYSTEM;
GRANT CREATE SYNONYM TO SKS;
GRANT CREATE PUBLIC SYNONYM TO SKS;


-- 2

CREATE GLOBAL TEMPORARY TABLE TEMP_TABLE(
    ID NUMBER,
    NAME VARCHAR(50)
);

INSERT INTO TEMP_TABLE VALUES (1, 'N1');
INSERT INTO TEMP_TABLE VALUES (2, 'N2');

SELECT * FROM TEMP_TABLE;

-- 3(последовательности)
CREATE SEQUENCE S1
    START WITH 1000
    INCREMENT BY 10
    NOMINVALUE
    NOMAXVALUE
    NOCYCLE
    NOCACHE;
    
SELECT S1.NEXTVAL FROM dual;

SELECT S1.CURRVAL FROM dual;

-- 4
CREATE SEQUENCE S2
    START WITH 10
    INCREMENT BY 10
    MAXVALUE 100
    NOCYCLE;
    
SELECT S2.NEXTVAL FROM dual;
DROP SEQUENCE S2;
-- 5
CREATE SEQUENCE S3 
    START WITH 10 
    INCREMENT BY -10 
    MINVALUE -100
    MAXVALUE 10;
    
SELECT S3.NEXTVAL FROM dual;
DROP SEQUENCE S3;

-- 6 
CREATE SEQUENCE S4
    START WITH 10
    INCREMENT BY 1
    MINVALUE 10
    MAXVALUE 15 
    CYCLE
    CACHE 5;

SELECT S4.NEXTVAL FROM dual;

-- 7
SELECT * FROM ALL_SEQUENCES WHERE SEQUENCE_OWNER = 'SKS';

-- 8 
CREATE TABLE T1 (
    N1 NUMBER(20),
    N2 NUMBER(20),
    N3 NUMBER(20),
    N4 NUMBER(20)
) CACHE STORAGE (BUFFER_POOL KEEP);

INSERT INTO T1 VALUES (S1.CURRVAL, S2.CURRVAL, S3.CURRVAL, S4.CURRVAL);
INSERT INTO T1 VALUES (S1.CURRVAL, S2.CURRVAL, S3.CURRVAL, S4.NEXTVAL);
INSERT INTO T1 VALUES (S1.CURRVAL, S2.CURRVAL, S3.CURRVAL, S4.NEXTVAL);
INSERT INTO T1 VALUES (S1.CURRVAL, S2.CURRVAL, S3.CURRVAL, S4.NEXTVAL);
INSERT INTO T1 VALUES (S1.CURRVAL, S2.CURRVAL, S3.CURRVAL, S4.NEXTVAL);
INSERT INTO T1 VALUES (S1.CURRVAL, S2.CURRVAL, S3.NEXTVAL, S4.NEXTVAL);
INSERT INTO T1 VALUES (S1.CURRVAL, S2.CURRVAL, S3.CURRVAL, S4.NEXTVAL);

SELECT * FROM T1;


-- 9 
CREATE CLUSTER ABC(
    X NUMBER(10),
    V VARCHAR2(12)
) 
HASHKEYS 200;

-- 10
CREATE TABLE A (
    XA NUMBER(10),
    VA VARCHAR(12),
    NA NUMBER(15)
)
CLUSTER ABC(XA, VA);

-- 11
CREATE TABLE B (
    XB NUMBER(10),
    VB VARCHAR(12),
    NB NUMBER(15)
)
CLUSTER ABC(XB, VB);

-- 12
CREATE TABLE C (
    XC NUMBER(10),
    VC VARCHAR(12),
    NC NUMBER(15)
)
CLUSTER ABC(XC, VC);

-- 13
SELECT * FROM USER_CLUSTERS;
SELECT * FROM USER_TABLES;

-- 14
CREATE SYNONYM CTABLE FOR C;

INSERT INTO C VALUES (1, '1', 1);

SELECT * FROM CTABLE;
SELECT * FROM C;

-- 15
CREATE PUBLIC SYNONYM BTABLE FOR B;


INSERT INTO B VALUES (1, '1', 1);
COMMIT;

SELECT * FROM BTABLE;
SELECT * FROM B;

-- PDB

SELECT * FROM BTABLE;

-- 16
CREATE TABLE D (
    ID INT PRIMARY KEY,
    NAME VARCHAR(20)
);

CREATE TABLE E (
    ID INT REFERENCES D(ID),
    NAME VARCHAR(20)
);

BEGIN
    FOR i IN 1..10
    LOOP
        INSERT INTO D(ID, NAME) VALUES (i, CONCAT('TABLE D', TO_CHAR(i)));
        INSERT INTO E(ID, NAME) VALUES (i, CONCAT('TABLE E', TO_CHAR(i)));
    END LOOP;
END;

SELECT * FROM D;
SELECT * FROM E;

CREATE VIEW V1 AS
    SELECT D.ID, D.NAME AS DNAME, E.NAME AS ENAME 
        FROM D INNER JOIN E ON D.ID = E.ID;

SELECT * FROM V1;

-- 17
CREATE MATERIALIZED VIEW MV_SKS
BUILD IMMEDIATE
REFRESH COMPLETE ON DEMAND
START WITH SYSDATE 
NEXT SYSDATE + INTERVAL '1' MINUTE
AS
    SELECT D.ID, D.NAME AS DNAME, E.NAME AS ENAME 
        FROM D INNER JOIN E ON D.ID = E.ID;
        
SELECT * FROM MV_SKS;

DELETE FROM D WHERE ID = 11;
DELETE FROM E WHERE ID = 11;

INSERT INTO D (ID, NAME) VALUES (12, 'Test D' || 12);
INSERT INTO E (ID, NAME) VALUES (12, 'Test E' || 12);

COMMIT;

SELECT * FROM E;
SELECT * FROM D;